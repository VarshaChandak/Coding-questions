import java.util.*;

class Solution {
    public int maxCandies(int[] status, int[] candies, int[][] keys, int[][] containedBoxes, int[] initialBoxes) {
        int n = status.length;
        boolean[] hasKey = new boolean[n];
        boolean[] opened = new boolean[n];
        boolean[] hasBox = new boolean[n];

        Set<Integer> boxes = new HashSet<>();
        for (int box : initialBoxes) {
            boxes.add(box);
            hasBox[box] = true;
        }

        int totalCandies = 0;
        boolean changed = true;

        while (changed) {
            changed = false;
            for (int box : new HashSet<>(boxes)) {
                if (!opened[box] && (status[box] == 1 || hasKey[box])) {
                    totalCandies += candies[box];
                    opened[box] = true;
                    changed = true;

                    for (int key : keys[box]) {
                        hasKey[key] = true;
                    }

                    for (int b : containedBoxes[box]) {
                        boxes.add(b);
                        hasBox[b] = true;
                    }
                }
            }
        }

        return totalCandies;
    }
}
