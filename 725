/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode[] splitListToParts(ListNode head, int k) {
        ListNode[] m=new ListNode[k];
        int n=0;
        ListNode curr=head;
        while(curr!=null){
            n++;
            curr=curr.next;

        }
       int partSize=n/k;
       int addon=n%k;

       curr=head;
       for(int i=0;i<k;i++){
        ListNode newPart=curr;
        ListNode prev=null;

        for(int j=0;j<partSize+(i<addon?1:0);j++){
            prev=curr;
            curr=curr.next;
        }

        if(prev!=null){
            prev.next=null;
        }

        m[i]=newPart;
       }
       
        
        return m;


      
        
    }
}
